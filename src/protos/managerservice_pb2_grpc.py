# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from src.protos import managerservice_pb2 as src_dot_protos_dot_managerservice__pb2


class ManagerServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RegisterBroker = channel.unary_unary(
                '/managerservice.ManagerService/RegisterBroker',
                request_serializer=src_dot_protos_dot_managerservice__pb2.BrokerDetails.SerializeToString,
                response_deserializer=src_dot_protos_dot_managerservice__pb2.Status.FromString,
                )
        self.HealthCheck = channel.unary_unary(
                '/managerservice.ManagerService/HealthCheck',
                request_serializer=src_dot_protos_dot_managerservice__pb2.HeartBeat.SerializeToString,
                response_deserializer=src_dot_protos_dot_managerservice__pb2.HeartBeat.FromString,
                )
        self.RegisterReplica = channel.unary_unary(
                '/managerservice.ManagerService/RegisterReplica',
                request_serializer=src_dot_protos_dot_managerservice__pb2.ReplicaDetails.SerializeToString,
                response_deserializer=src_dot_protos_dot_managerservice__pb2.Response.FromString,
                )
        self.PushUpdates = channel.stream_unary(
                '/managerservice.ManagerService/PushUpdates',
                request_serializer=src_dot_protos_dot_managerservice__pb2.Query.SerializeToString,
                response_deserializer=src_dot_protos_dot_managerservice__pb2.Response.FromString,
                )
        self.SendTransaction = channel.unary_unary(
                '/managerservice.ManagerService/SendTransaction',
                request_serializer=src_dot_protos_dot_managerservice__pb2.Transaction.SerializeToString,
                response_deserializer=src_dot_protos_dot_managerservice__pb2.TransactionResponse.FromString,
                )


class ManagerServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def RegisterBroker(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def HealthCheck(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RegisterReplica(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PushUpdates(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendTransaction(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ManagerServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RegisterBroker': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterBroker,
                    request_deserializer=src_dot_protos_dot_managerservice__pb2.BrokerDetails.FromString,
                    response_serializer=src_dot_protos_dot_managerservice__pb2.Status.SerializeToString,
            ),
            'HealthCheck': grpc.unary_unary_rpc_method_handler(
                    servicer.HealthCheck,
                    request_deserializer=src_dot_protos_dot_managerservice__pb2.HeartBeat.FromString,
                    response_serializer=src_dot_protos_dot_managerservice__pb2.HeartBeat.SerializeToString,
            ),
            'RegisterReplica': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterReplica,
                    request_deserializer=src_dot_protos_dot_managerservice__pb2.ReplicaDetails.FromString,
                    response_serializer=src_dot_protos_dot_managerservice__pb2.Response.SerializeToString,
            ),
            'PushUpdates': grpc.stream_unary_rpc_method_handler(
                    servicer.PushUpdates,
                    request_deserializer=src_dot_protos_dot_managerservice__pb2.Query.FromString,
                    response_serializer=src_dot_protos_dot_managerservice__pb2.Response.SerializeToString,
            ),
            'SendTransaction': grpc.unary_unary_rpc_method_handler(
                    servicer.SendTransaction,
                    request_deserializer=src_dot_protos_dot_managerservice__pb2.Transaction.FromString,
                    response_serializer=src_dot_protos_dot_managerservice__pb2.TransactionResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'managerservice.ManagerService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ManagerService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def RegisterBroker(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/managerservice.ManagerService/RegisterBroker',
            src_dot_protos_dot_managerservice__pb2.BrokerDetails.SerializeToString,
            src_dot_protos_dot_managerservice__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def HealthCheck(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/managerservice.ManagerService/HealthCheck',
            src_dot_protos_dot_managerservice__pb2.HeartBeat.SerializeToString,
            src_dot_protos_dot_managerservice__pb2.HeartBeat.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RegisterReplica(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/managerservice.ManagerService/RegisterReplica',
            src_dot_protos_dot_managerservice__pb2.ReplicaDetails.SerializeToString,
            src_dot_protos_dot_managerservice__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PushUpdates(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/managerservice.ManagerService/PushUpdates',
            src_dot_protos_dot_managerservice__pb2.Query.SerializeToString,
            src_dot_protos_dot_managerservice__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendTransaction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/managerservice.ManagerService/SendTransaction',
            src_dot_protos_dot_managerservice__pb2.Transaction.SerializeToString,
            src_dot_protos_dot_managerservice__pb2.TransactionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
